name: coreaudio-sys
on: [push, pull_request]
jobs:
  # Run cargo test with default, no and all features.
  macos-test:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install llvm and clang
      run: brew install llvm
    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: cargo test
      run: cargo test --verbose
    - name: cargo test - no features
      run: cargo test --no-default-features --verbose
    - name: cargo test - all features
      run: cargo test --all-features --verbose

    - name: add ios targets
      run: rustup target add aarch64-apple-ios x86_64-apple-ios
    - name: Build ios targets
      run: for i in aarch64-apple-ios x86_64-apple-ios; do cargo build --verbose --target=$i; done; fi

  # Build the docs with all features to make sure docs.rs will work.
  macos-docs:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install llvm and clang
      run: brew install llvm
    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: cargo doc - all features
      run: cargo doc --all-features --verbose

  # Publish a new version when pushing to master.
  # Will succeed if the version has been updated, otherwise silently fails.
  cargo-publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    env:
      CRATESIO_TOKEN: ${{ secrets.CRATESIO_TOKEN }}
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install llvm and clang
      run: brew install llvm
    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: cargo publish
      continue-on-error: true
      run: cargo publish --token $CRATESIO_TOKEN
